% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accumulate_runoff_constant_complex.R
\name{accumulate_runoff_constant_complex}
\alias{accumulate_runoff_constant_complex}
\title{Apply iterative constant velocity routing to a pre-processed complex river
network}
\usage{
accumulate_runoff_constant_complex(
  sf_river_network,
  riverID = "riverID",
  runoff_var_name = "ERA5_land",
  velocity_var_name = "Maidment_velocity_ms",
  catchment_subgroup_var_name = "river_group_new",
  verbose = FALSE
)
}
\arguments{
\item{sf_river_network}{A LINESTRING simple feature collection containing a
topologically derived grouping column that ensures each group contains no
bifurcating channels; i.e., all group networks could be presented as simple
directed acyclic graphs.}

\item{riverID}{unique edge identifier.}

\item{runoff_var_name}{Character string of column name for runoff time.}

\item{velocity_var_name}{Character string of column name for topologically
ordered groups.
series.}

\item{catchment_subgroup_var_name}{Character string of column name for reach velocity.}

\item{verbose}{Boolean. Print messages.}
}
\value{
Returns a HS river network with discharge_ts list column
}
\description{
A method for constant velocity routing that takes a pre-processed HS river
network that contains reach specific interpolated rainfall runoff and routes
runoff though the network according to topologically ordered grouping.
}
\details{
With processing order established using
  hydrostreamer::split_network_at_bifurcations, we now route discharge. Each
  iteration of the loop generates routed discharge for all edges in the
  current group, and updates the two or more downstream reaches in the
  relevant group(s) into which the furthest downstream edge of the current
  group flows. That is, we add the reach specific runoff times series for the
  bifurcated channels to a fraction (usually 1/2) of the accumulated
  discharge at the edge immediately upstream of the bifurcation. These steps
  occur iteratively until all groups have been processed in topological
  order. See vignette for example with Miera river, which contains a single
  bifurcation at the spatial resolution of EU-Hydro.
  
Note that the iterative nature of this method (and the preceding step of
topological group identification) ensures that if there is more than one
upstream reach (group) flowing into a bifurcation of the next downstream
group, the runoff_ts of those bifurcated reaches will also be updated
iteratively, so the method is robust to, for example, three edges flowing
into two at a complex confluence (as might be expected in deltas or braids).
Parallelisation of this method is theoretically possible for independent
subgroups at the upper reaches of catchments, but is not implemented.
}
