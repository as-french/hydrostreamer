// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// constantroute
NumericMatrix constantroute(NumericMatrix inflow, List record, int pad_n, int nseg);
RcppExport SEXP _hydrostreamer_constantroute(SEXP inflowSEXP, SEXP recordSEXP, SEXP pad_nSEXP, SEXP nsegSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inflow(inflowSEXP);
    Rcpp::traits::input_parameter< List >::type record(recordSEXP);
    Rcpp::traits::input_parameter< int >::type pad_n(pad_nSEXP);
    Rcpp::traits::input_parameter< int >::type nseg(nsegSEXP);
    rcpp_result_gen = Rcpp::wrap(constantroute(inflow, record, pad_n, nseg));
    return rcpp_result_gen;
END_RCPP
}
// delineatecpp
IntegerVector delineatecpp(IntegerVector seeds, IntegerVector basID, IntegerVector drdir, IntegerVector delbas, int nx, int ny);
RcppExport SEXP _hydrostreamer_delineatecpp(SEXP seedsSEXP, SEXP basIDSEXP, SEXP drdirSEXP, SEXP delbasSEXP, SEXP nxSEXP, SEXP nySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type seeds(seedsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type basID(basIDSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type drdir(drdirSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delbas(delbasSEXP);
    Rcpp::traits::input_parameter< int >::type nx(nxSEXP);
    Rcpp::traits::input_parameter< int >::type ny(nySEXP);
    rcpp_result_gen = Rcpp::wrap(delineatecpp(seeds, basID, drdir, delbas, nx, ny));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hydrostreamer_constantroute", (DL_FUNC) &_hydrostreamer_constantroute, 4},
    {"_hydrostreamer_delineatecpp", (DL_FUNC) &_hydrostreamer_delineatecpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_hydrostreamer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
