# Generated by roxygen2: do not edit by hand

S3method(HSwrite,HS)
S3method(accumulate_runoff,constant)
S3method(accumulate_runoff,instant)
S3method(accumulate_runoff,muskingum)
S3method(combine_runoff,HS)
S3method(combine_runoff,list)
S3method(ensemble_summary,HS)
S3method(ensemble_summary,list)
S3method(plot,HS)
S3method(print,HS)
export(HSwrite)
export(accumulate_runoff)
export(accumulate_runoff_constant)
export(accumulate_runoff_instant)
export(add_HS)
export(add_control)
export(add_observations)
export(combine_runoff)
export(compute_HSweights)
export(compute_area_weights)
export(compute_river_weights)
export(control)
export(create_HS)
export(create_HSweights)
export(create_river)
export(delineate_basin)
export(discharge)
export(downscale_runoff)
export(downstream)
export(ensemble_summary)
export(flow_gof)
export(interpolate_runoff)
export(observations)
export(optimise_point)
export(optimise_region)
export(raster_to_HS)
export(river_hierarchy)
export(river_network)
export(river_outlets)
export(river_voronoi)
export(runoff)
export(split_river_with_grid)
export(tsplot)
export(upstream)
import(hydroGOF)
import(raster)
import(sf)
importFrom(Matrix,rankMatrix)
importFrom(Rcpp,evalCpp)
importFrom(dplyr,"%>%")
importFrom(dplyr,bind_rows)
importFrom(lubridate,"%m+%")
importFrom(methods,hasArg)
importFrom(quadprog,solve.QP)
importFrom(stats,complete.cases)
importFrom(stats,lm)
importFrom(utils,hasName)
importFrom(utils,setTxtProgressBar)
importFrom(utils,txtProgressBar)
importFrom(utils,write.csv)
useDynLib(hydrostreamer, .registration = TRUE)
